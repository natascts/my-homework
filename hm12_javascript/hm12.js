  /********************************VAR,LET,CONST*************************************************/
  //   –ó–∞–≤–¥–∞–Ω–Ω—è 1: –û–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—ñ (var vs let)
  //   –©–æ –≤–∏–≤–µ–¥–µ —Ü–µ–π –∫–æ–¥? –ü–æ—è—Å–Ω—ñ—Ç—å —á–æ–º—É.

//     if (true) {
//         var a = 10;
//         let b = 20;
//     }
//     console.log(a); //- –≤–∏–≤–µ–¥–µ 10, –±–æ var –º–∞—î —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—É –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—ñ (–¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ–∑–∞ –±–ª–æ–∫–æ–º);
//     console.log(b); //- –±—É–¥–µ –ø–æ–º–∏–ª–∫–∞, –±–æ let –º–∞—î –±–ª–æ—á–Ω—É –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—ñ, —Ç–æ–±—Ç–æ —ñ—Å–Ω—É—î —Ç—ñ–ª—å–∫–∏ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ –±–ª–æ–∫—É, –¥–µ —ó—ó –æ–≥–æ–ª–æ—à–µ–Ω–æ (–≤ –±–ª–æ–∫—É if).


  //   –ó–∞–≤–¥–∞–Ω–Ω—è 2: –ß–∏ –≤–∏–∫–ª–∏—á–µ –ø–æ–º–∏–ª–∫—É? (const)
  //   –ß–∏ —Å–ø—Ä–∞—Ü—é—î —Ü–µ–π –∫–æ–¥? –Ø–∫—â–æ –Ω—ñ, —á–æ–º—É?

  //   const d = 50;
  //   d = 100;
  //   console.log(d);

// –ö–æ–¥ –Ω–µ —Å–ø—Ä–∞—Ü—é—î, –±–æ –∑–º—ñ–Ω–Ω—É const –ø–µ—Ä–µ–∑–∞–ø–∏—Å—É–≤–∞—Ç–∏ –Ω–µ –º–æ–∂–Ω–∞.

  //   –ó–∞–≤–¥–∞–Ω–Ω—è 3: –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∫–æ–¥—É (const —ñ –æ–±'—î–∫—Ç–∏)
  //   –©–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–º—ñ–Ω–∏—Ç–∏, —â–æ–± –∫–æ–¥ –Ω–µ –≤–∏–∫–ª–∏–∫–∞–≤ –ø–æ–º–∏–ª–∫—É?

  //   const user = { name: "Nick" };
  //   user = { name: "Alex" }; //- —Ç—Ä–µ–±–∞ –∑–º—ñ–Ω–∏—Ç–∏ –Ω–∞: user.name = "Alex";

  /********************************–°–¢–†–Ü–õ–ö–û–í–Ü –§–£–ù–ö–¶–Ü–á*************************************************/

  // –ó–∞–≤–¥–∞–Ω–Ω—è 1: –ß–æ–º—É —Ü–µ–π –∫–æ–¥ –Ω–µ –ø—Ä–∞—Ü—é—î? –Ø–∫ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤—à–∏ –∑–≤–∏—á–∞–π–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é?

  // const person = {
  //     name: "Alice",
  //     greet: () => {
  //         console.log(`Hello, my name is ${this.name}`);
  //     }
  // };
  // person.greet();
// ‚ùì –©–æ –≤–∏–≤–µ–¥–µ –∫–æ–¥? –Ø–∫ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏?
// –ö–æ–¥ –≤–∏–≤–µ–¥–µ –ø–æ–º–∏–ª–∫—É, –±–æ —Å—Ç—Ä—ñ–ª–∫–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –Ω–µ –º–∞—é—Ç—å –≤–ª–∞—Å–Ω–æ–≥–æ this, –∞ –º–æ–∂—É—Ç—å —Ç—ñ–ª—å–∫–∏ —É—Å–ø–∞–¥–∫–æ–≤—É–≤–∞—Ç–∏ –π–æ–≥–æ.
// –í–∏–ø—Ä–∞–≤–∏—Ç–∏ –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –∑–≤–∏—á–∞–π–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –º–∞—î –≤–ª–∞—Å–Ω–∏–π this:
//  const person = {
//       name: "Alice",
//       greet: function () {
//           console.log(`Hello, my name is ${this.name}`);
//       }
//   };
//   person.greet();

  // –ó–∞–≤–¥–∞–Ω–Ω—è 2: –†–æ–±–æ—Ç–∞ –∑ –º–∞—Å–∏–≤–∞–º–∏
  // –©–æ –≤–∏–≤–µ–¥–µ —Ü–µ–π –∫–æ–¥? –ß–æ–º—É

  // const numbers = [1, 2, 3, 4];
  // const squares = numbers.map(num => num * num);
  // console.log(squares);
// –ö–æ–¥ –≤–∏–≤–µ–¥–µ –º–Ω–æ–∂–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É —Å–∞–º–∏—Ö –Ω–∞ —Å–µ–±–µ, –±–æ map –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –ø–æ –∫–æ–∂–Ω–æ–º—É –µ–ª–µ–º–µ–Ω—Ç—É –º–∞—Å–∏–≤—É numbers,
// –≤ –ø–µ—Ä—à–æ–º—É num –º–∏ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–Ω–æ–∂–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É —Å–∞–º–∏—Ö –Ω–∞ —Å–µ–±–µ
// —Ç–∞ –Ω–æ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —É –Ω–æ–≤–æ–º—É –º–∞—Å–∏–≤—ñ squares.

  // –ó–∞–≤–¥–∞–Ω–Ω—è 3: –ß–æ–º—É new –Ω–µ –ø—Ä–∞—Ü—é—î?
  // –©–æ —Å—Ç–∞–Ω–µ—Ç—å—Å—è –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ —Ü—å–æ–≥–æ –∫–æ–¥—É? –Ø–∫ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤—à–∏ –∑–≤–∏—á–∞–π–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é?

  // const Person = (name) => {
  //     this.name = name;
  // };
// const user = new Person("Alice");
// –ö–æ–¥ –≤–∏–≤–µ–¥–µ –ø–æ–º–∏–ª–∫—É, –±–æ —Å—Ç—Ä—ñ–ª–∫–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –Ω–µ –ø—Ä–∞—Ü—é—é—Ç—å –∑ new, –±–æ –≤–æ–Ω–∏ –Ω–µ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞–º–∏.
//–©–æ–± –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ –∫–æ–¥, –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∑–≤–∏—á–∞–π–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é:
// const Person = function (name) {
//   this.name = name;
// };
// const user = new Person("Alice");

  //*************************************************   –í–ø—Ä–∞–≤–∏ –Ω–∞ —à–∞–±–ª–æ–Ω–Ω—ñ —Ä—è–¥–∫–∏ (Template Literals) –≤ ES6
  // üîπ –ó–∞–≤–¥–∞–Ω–Ω—è 1: –ë–∞–≥–∞—Ç–æ—Ä—è–¥–∫–æ–≤–∏–π —Ç–µ–∫—Å—Ç
  // –°—Ç–≤–æ—Ä—ñ—Ç—å —Ä—è–¥–æ–∫, —è–∫–∏–π –º—ñ—Å—Ç–∏—Ç—å —Ç–∞–∫—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —à–∞–±–ª–æ–Ω–Ω—ñ —Ä—è–¥–∫–∏ (–±–µ–∑ \n —ñ +):

  // –†–µ–∑—É–ª—å—Ç–∞—Ç–∏:
  // 1. –ü–µ—Ä–µ–º–æ–∂–µ—Ü—å - –û–ª–µ–∫—Å—ñ–π
  // 2. –î—Ä—É–≥–µ –º—ñ—Å—Ü–µ - –ú–∞—Ä–∏–Ω–∞
  // 3. –¢—Ä–µ—Ç—î –º—ñ—Å—Ü–µ - –°–µ—Ä–≥—ñ–π

// let results = `1. –ü–µ—Ä–µ–º–æ–∂–µ—Ü—å - –û–ª–µ–∫—Å—ñ–π
// 2. –î—Ä—É–≥–µ –º—ñ—Å—Ü–µ - –ú–∞—Ä–∏–Ω–∞
// 3. –¢—Ä–µ—Ç—î –º—ñ—Å—Ü–µ - –°–µ—Ä–≥—ñ–π`
// console.log(results);

  // üîπ –ó–∞–≤–¥–∞–Ω–Ω—è 2: –í—Å—Ç–∞–≤–∫–∞ —Ñ—É–Ω–∫—Ü—ñ–π —É —à–∞–±–ª–æ–Ω–Ω—ñ —Ä—è–¥–∫–∏
  // –Ñ —Ñ—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ç–æ—á–Ω–∏–π —Ä—ñ–∫. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ —ó—ó –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ —à–∞–±–ª–æ–Ω–Ω–æ–≥–æ —Ä—è–¥–∫–∞:

//   function getYear() {
//       return new Date().getFullYear();
//   }
//   console.log( `–ó–∞—Ä–∞–∑ ${getYear()} —Ä—ñ–∫.` );
  // –û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:

  // –ó–∞—Ä–∞–∑ 2025 —Ä—ñ–∫.


  // üîπ –ó–∞–≤–¥–∞–Ω–Ω—è 3: –¢–µ–≥–æ–≤–∞–Ω—ñ —à–∞–±–ª–æ–Ω–∏ (Tagged Templates)
  // –©–æ –≤–∏–≤–µ–¥–µ –∫–æ–¥? –ß–æ–º—É

  // function tag(strings, value) {
  //     return `${strings[0]}${value.toUpperCase()}${strings[1]}`;
  // }

  // const user = "nick";
// console.log(tag`–ü—Ä–∏–≤—ñ—Ç, ${user}, —è–∫ —Å–ø—Ä–∞–≤–∏?`);
  
//–ö–æ–¥ –≤–∏–≤–µ–¥–µ: "–ü—Ä–∏–≤—ñ—Ç, NICK, —è–∫ —Å–ø—Ä–∞–≤–∏?", –±–æ –≤ string[0] –ø–µ—Ä–µ–¥–∞–ª–æ—Å—å "–ü—Ä–∏–≤—ñ—Ç, ", –≤ user - —ñ–º'—è –≤–µ–ª–∏–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏, —Ç–æ–º—É —â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏–π
//–º–µ—Ç–æ–¥ toUpperCase(), –∞ –≤ strings[1] –ø–µ—Ä–µ–¥–∞–Ω–∏–π —Ä—è–¥–æ–∫ ", —è–∫ —Å–ø—Ä–∞–≤–∏?". –¢–æ–±—Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è tag –æ—Ç—Ä–∏–º—É—î —à–∞–±–ª–æ–Ω (${strings[0]}${value.toUpperCase()}${strings[1]})
//—Ç–∞ –ø—ñ–¥—Å—Ç–∞–≤–ª—è—î –∑–Ω–∞—á–µ–Ω–Ω—è (`–ü—Ä–∏–≤—ñ—Ç, ${user}, —è–∫ —Å–ø—Ä–∞–≤–∏?).

  //***********************************************   –í–ø—Ä–∞–≤–∏ –Ω–∞ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—é –º–∞—Å–∏–≤—ñ–≤ —ñ –æ–±'—î–∫—Ç—ñ–≤
  // üîπ –ó–∞–≤–¥–∞–Ω–Ω—è 1: –ü—Ä–æ–ø—É—Å–∫ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É
  // –Ñ –º–∞—Å–∏–≤:

//   const colors = ["red", "green", "blue", "yellow"];
  // –û—Ç—Ä–∏–º–∞–π—Ç–µ –ø–µ—Ä—à–∏–π —ñ —Ç—Ä–µ—Ç—ñ–π –µ–ª–µ–º–µ–Ω—Ç–∏, –ø—Ä–æ–ø—É—Å—Ç–∏–≤—à–∏ –¥—Ä—É–≥–∏–π. (–í–ò–ö–û–†–ò–°–¢–ê–¢–ò –î–ï–°–¢–†–£–ö–¢–£–†–ò–ó–ê–¶–Ü–Æ –ú–ê–°–ò–í–Ü–í)
// const  [first, , third] = colors;
// console.log(first);
// console.log(third);

  // üîπ –ó–∞–≤–¥–∞–Ω–Ω—è 2: –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –æ–±'—î–∫—Ç–∞
  // –î–∞–Ω–æ –æ–±'—î–∫—Ç:

//   const user = {
//     name: "Alice",
//     age: 25,
//     country: "USA"
//   };
  // –í–∏—Ç—è–≥–Ω—ñ—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è —É –∑–º—ñ–Ω–Ω—ñ name, age, country –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—ó.

// const { name, age, country } = user;
// console.log(name);

  // üîπ –ó–∞–≤–¥–∞–Ω–Ω—è 3: –ó–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
  // –î–∞–Ω–æ –æ–±'—î–∫—Ç, —É —è–∫–æ–º—É –Ω–µ–º–∞—î age:

//   const person = {
//     name: "Bob"
//   };
  // –û—Ç—Ä–∏–º–∞–π—Ç–µ name —ñ age, –≤—Å—Ç–∞–Ω–æ–≤–∏–≤—à–∏ age –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 30. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä—ñ–∑–∞—Ü—ñ—é –æ–±'—î–∫—Ç—ñ–≤ —ñ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω—è–º
// const { name, age = 30} = person;
// console.log(age)


  // üîπ –ó–∞–≤–¥–∞–Ω–Ω—è 4: –í–∫–ª–∞–¥–µ–Ω–∞ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è
  // –Ñ –æ–±'—î–∫—Ç:

  // const employee = {
  //   id: 1,
  //   personalInfo: {
  //     firstName: "John",
  //     lastName: "Doe"
  //   }
  // };
  // –í–∏—Ç—è–≥–Ω—ñ—Ç—å firstName —Ç–∞ lastName —É –∑–º—ñ–Ω–Ω—ñ –æ–∫—Ä–µ–º–æ. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –≤–∫–ª–∞–¥–µ–Ω—É –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä—ñ–∑–∞—Ü—ñ—é
// const { id, personalInfo: { firstName, lastName } } = employee;
// console.log(firstName);

  //******************************************************   –í–ø—Ä–∞–≤–∏ –Ω–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∏ ...spread —Ç–∞ ...rest –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥—è–º–∏

  // üîπ –ó–∞–≤–¥–∞–Ω–Ω—è 1: –û–±'—î–¥–Ω–∞–Ω–Ω—è –º–∞—Å–∏–≤—ñ–≤
  // –Ñ –¥–≤–∞ –º–∞—Å–∏–≤–∏:

//   const arr1 = [10, 20, 30];
//   const arr2 = [40, 50, 60];
  // –û–±'—î–¥–Ω–∞–π—Ç–µ arr1 —Ç–∞ arr2 —É –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ mergedArray –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é ...spread.
// const mergedArray = [...arr1, ...arr2];
// console.log(mergedArray)


  // üîπ –ó–∞–≤–¥–∞–Ω–Ω—è 2: –î–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π –¥–æ –æ–±'—î–∫—Ç–∞
  // –Ñ –æ–±'—î–∫—Ç:

  // const car = { brand: "Toyota", model: "Corolla" };
  // –°—Ç–≤–æ—Ä—ñ—Ç—å –Ω–æ–≤–∏–π –æ–±'—î–∫—Ç updatedCar, –¥–æ–¥–∞–≤—à–∏ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å year: 2022 –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é ...spread.
// const updatedCar = { ...car, year: "2022" };
// console.log(updatedCar);


  // üîπ –ó–∞–≤–¥–∞–Ω–Ω—è 3: –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –º–∞—Å–∏–≤—É –∑ ...rest
  // –Ñ –º–∞—Å–∏–≤:

//   const fruits = ["apple", "banana", "cherry", "date"];
//   –í–∏—Ç—è–≥–Ω—ñ—Ç—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç —É –∑–º—ñ–Ω–Ω—É firstFruit, –∞ —Ä–µ—à—Ç—É —É –º–∞—Å–∏–≤ remainingFruits.
// const [firstFruit, ...remainingFruits] = fruits;
// console.log(remainingFruits);


  // üîπ –ó–∞–≤–¥–∞–Ω–Ω—è 4: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è ...spread —É —Ñ—É–Ω–∫—Ü—ñ—ó
  // –Ñ –º–∞—Å–∏–≤ —á–∏—Å–µ–ª:

//   const numbers = [10, 20, 30, 40, 50];
// –ü–µ—Ä–µ–¥–∞–π—Ç–µ –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å–∏–≤—É —É Math.max(), –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ ...spread.
// console.log(Math.max(...numbers));


  // 1 –ï–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü—ñ—ó –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º (export default)
  // üìå –ó–∞–≤–¥–∞–Ω–Ω—è:
  // –£ —Ñ–∞–π–ª—ñ math.js —Å—Ç–≤–æ—Ä—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é square(n), —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –∫–≤–∞–¥—Ä–∞—Ç —á–∏—Å–ª–∞, —Ç–∞ –µ–∫—Å–ø–æ—Ä—Ç—É–π—Ç–µ —ó—ó –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º. –ü–æ—Ç—ñ–º —ñ–º–ø–æ—Ä—Ç—É–π—Ç–µ —ó—ó —É main.js —ñ –≤–∏–∫–ª–∏—á—Ç–µ –¥–ª—è —á–∏—Å–ª–∞ 4.

  // // math.js
// export default function square(n) {
//   return n * n;
// }

//   // // main.js
// import square from "./math.js";
// console.log(square(4));

  // 2 –Ü–º–ø–æ—Ä—Ç –≤—Å—å–æ–≥–æ –º–æ–¥—É–ª—è (* as)
  // üìå –ó–∞–≤–¥–∞–Ω–Ω—è:
  // –Ñ –º–æ–¥—É–ª—å mathOperations.js, —è–∫–∏–π –µ–∫—Å–ø–æ—Ä—Ç—É—î —Ñ—É–Ω–∫—Ü—ñ—ó add, subtract —Ç–∞ multiply.
  // –Ü–º–ø–æ—Ä—Ç—É–π—Ç–µ –≤–µ—Å—å –º–æ–¥—É–ª—å —É calculator.js –ø—ñ–¥ —ñ–º–µ–Ω–µ–º mathOps —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü—ñ—é add.

  // mathOperations.js
//   export function add(a, b) {
//     return a + b;
//   }

//   export function subtract(a, b) {
//     return a - b;
//   }

//   export function multiply(a, b) {
//     return a * b;
//   }

//   // calculator.js
// // (—Ç—É—Ç –º–∞—î –±—É—Ç–∏ —ñ–º–ø–æ—Ä—Ç –≤—Å—å–æ–≥–æ –º–æ–¥—É–ª—è —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó add)
// import * as mathOps from "./mathOperations.js";
// console.log(mathOps.add(4, 7))

  //*************************************   –í–ø—Ä–∞–≤–∏ –Ω–∞ —Ç–µ–º—É "–û–±—ñ—Ü—è–Ω–∫–∏ (Promise) –≤ ES6" –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥—è–º–∏
  // üîπ –í–ø—Ä–∞–≤–∞ 1: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è reject
  // –©–æ –≤–∏–≤–µ–¥–µ —Ü–µ–π –∫–æ–¥ —É –∫–æ–Ω—Å–æ–ª—å?

  // const myPromise = new Promise((resolve, reject) => {
  //   reject("‚ùå –ü–æ–º–∏–ª–∫–∞!");
  // });

  // myPromise
  //   .then((message) => console.log(message))
  //   .catch((error) => console.error(error));


  // üîπ –í–ø—Ä–∞–≤–∞ 2: .catch() –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ —É then()
  // –©–æ –≤–∏–≤–µ–¥–µ —Ü–µ–π –∫–æ–¥?

  // const myPromise = new Promise((resolve) => {
  //   resolve(10);
  // });

  // myPromise
  //   .then((num) => {
  //     throw new Error("‚ùå –©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫!");
  //   })
  //   .catch((error) => console.error(error.message));


  // üîπ –í–ø—Ä–∞–≤–∞ 3: Promise.all()
  // –©–æ –≤–∏–≤–µ–¥–µ —Ü–µ–π –∫–æ–¥?

  // const promise1 = new Promise((resolve) => setTimeout(() => resolve("‚úÖ –ü–µ—Ä—à–µ"), 1000));
  // const promise2 = new Promise((resolve) => setTimeout(() => resolve("‚úÖ –î—Ä—É–≥–µ"), 2000));

  // Promise.all([promise1, promise2]).then((results) => console.log(results));


  // üîπ –í–ø—Ä–∞–≤–∞ 4: –ö–æ–º–±—ñ–Ω–∞—Ü—ñ—è Promise.allSettled()
  // –©–æ –≤–∏–≤–µ–¥–µ —Ü–µ–π –∫–æ–¥?

  // const promise1 = new Promise((resolve) => setTimeout(() => resolve("‚úÖ –£—Å–ø—ñ—Ö"), 1000));
  // const promise2 = new Promise((_, reject) => setTimeout(() => reject("‚ùå –ü–æ–º–∏–ª–∫–∞"), 2000));

  // Promise.allSettled([promise1, promise2]).then((results) => console.log(results));

  //*************************************************   üìù –í–ø—Ä–∞–≤–∏ —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –ø–æ —Ç–µ–º—ñ async/await
  // üîπ –í–ø—Ä–∞–≤–∞ 1: await —É —Ñ—É–Ω–∫—Ü—ñ—ó
  // –©–æ –≤–∏–≤–µ–¥–µ —Ü–µ–π –∫–æ–¥ —É –∫–æ–Ω—Å–æ–ª—å? –ß–æ–º—É

  // async function getData() {
  //   let result = await Promise.resolve("üöÄ –î–∞–Ω—ñ –æ—Ç—Ä–∏–º–∞–Ω—ñ!");
  //   console.log(result);
  // }

  // getData();
  // console.log("‚è≥ –û—á—ñ–∫—É—î–º–æ...");


  // üîπ –í–ø—Ä–∞–≤–∞ 2: –ü–æ—Å–ª—ñ–¥–æ–≤–Ω–µ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è await
  // –Ø–∫–∏–π –±—É–¥–µ –ø–æ—Ä—è–¥–æ–∫ –≤–∏–≤–æ–¥—É —É –∫–æ–Ω—Å–æ–ª—å? –ß–æ–º—É

  // async function loadData() {
  //   console.log("1Ô∏è‚É£ –ü–æ—á–∞—Ç–æ–∫");

  //   let data1 = await new Promise((resolve) => setTimeout(() => resolve("üìÑ –î–∞–Ω—ñ 1"), 2000));
  //   console.log(data1);

  //   let data2 = await new Promise((resolve) => setTimeout(() => resolve("üìÑ –î–∞–Ω—ñ 2"), 1000));
  //   console.log(data2);

  //   console.log("üèÅ –ö—ñ–Ω–µ—Ü—å");
  // }

  // loadData();


  // üîπ –í–ø—Ä–∞–≤–∞ 3: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è fetch
  // –©–æ –≤–∏–≤–µ–¥–µ —Ü–µ–π –∫–æ–¥? –ß–æ–º—É

  // async function getUser() {
  //   let response = await fetch("https://jsonplaceholder.typicode.com/users/1");
  //   let user = await response.json();
  //   console.log(user.name);
  // }

  // getUser();


  // üîπ –í–ø—Ä–∞–≤–∞ 4: –ß–æ–º—É setTimeout –Ω–µ –ø—Ä–∞—Ü—é—î –∑ await?
  // –©–æ –≤–∏–≤–µ–¥–µ —Ü–µ–π –∫–æ–¥? –ß–æ–º—É

  // async function delay() {
  //   await setTimeout(() => console.log("‚è≥ –ó–∞—Ç—Ä–∏–º–∫–∞"), 2000);
  //   console.log("üèÅ –ö—ñ–Ω–µ—Ü—å");
  // }

  // delay();





